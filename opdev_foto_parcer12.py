import asyncio   
import time
from playwright.async_api import async_playwright
from datetime import datetime
import os
from openpyxl import Workbook, load_workbook  # –ò—Å–ø–æ–ª—å–∑—É–µ–º load_workbook –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞

# –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
LOGIN_URL = 'https://opdev.ru/'
TARGET_URL = 'https://opdev.ru/catalog/opticheskie_nablyudatelnye_pribory/pritsely_dnevnye_kollimatornye/pritsely_dnevnye_brite/pritsel_opticheskiy_brite_wa8x_2-16x50_sf_ir/'

USER_LOGIN = '9896600@mail.ru'
USER_PASSWORD = '89111664848'
TARGET_ARTICLE = '31509'  # –ó–∞–¥–∞–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª –¥–ª—è –ø–æ–∏—Å–∫–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
async def countdown_timer(step_name, duration, stop_event):
    start_time = time.time()
    print(step_name)  # –ü–µ—á–∞—Ç–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —ç—Ç–∞–ø–∞ –æ–¥–∏–Ω —Ä–∞–∑
    while not stop_event.is_set():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
        elapsed_time = time.time() - start_time
        print(f"{int(elapsed_time)} —Å–µ–∫—É–Ω–¥ –ø—Ä–æ—à–ª–æ", end="\r", flush=True)  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(1)
    print(f"{int(elapsed_time)} —Å–µ–∫—É–Ω–¥ –ø—Ä–æ—à–ª–æ")  # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–≤–æ–¥ —Å –≤—Ä–µ–º–µ–Ω–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–∞–ø–∞

async def run():
    start_time = time.time()  # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞

    print("–ü—Ä–∏–≤–µ—Ç! –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä —á–µ—Ä–µ–∑ Playwright...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª Excel. –ï—Å–ª–∏ –¥–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    excel_file = os.path.join(os.path.dirname(__file__), "results.xlsx")
    if os.path.exists(excel_file):
        wb = load_workbook(excel_file)  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        ws = wb.active
    else:
        wb = Workbook()  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        ws = wb.active
        ws.title = "–¢–æ–≤–∞—Ä—ã"
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ Excel
        ws.append(["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–ó–Ω–∞—á–µ–Ω–∏–µ"])

    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)  # headless=True –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –±–µ–∑ –æ–∫–Ω–∞
        page = await browser.new_page()

        # –≠—Ç–∞–ø 1: –û–∂–∏–¥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∞–π—Ç–∞ –∏ –∂–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        stop_event = asyncio.Event()  # –û–∂–∏–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        timer_task = asyncio.create_task(countdown_timer("–û—Ç–∫—Ä—ã–ª–∏ —Å–∞–π—Ç\n–ñ–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...", 30, stop_event))  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
        await page.goto(LOGIN_URL)  # –û—Å–Ω–æ–≤–Ω–æ–π —à–∞–≥ (–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç)
        stop_event.set()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–∞–π–º–µ—Ä —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞
        await timer_task  # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞

        # –≠—Ç–∞–ø 2: –í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
        await page.wait_for_selector('input[name="USER_LOGIN"]')
        await page.wait_for_selector('input[name="USER_PASSWORD"]')
        await page.fill('input[name="USER_LOGIN"]', USER_LOGIN)
        await page.fill('input[name="USER_PASSWORD"]', USER_PASSWORD)
        await page.get_by_role("button", name="–í–æ–π—Ç–∏").click()

        # –≠—Ç–∞–ø 3: –û–∂–∏–¥–∞–µ–º —É—Å–ø–µ—à–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        stop_event.clear()  # –°–±—Ä–æ—Å–∏–º —Å—Ç–æ–ø-—Å–∏–≥–Ω–∞–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç—Ç–∞–ø–∞
        timer_task = asyncio.create_task(countdown_timer("–£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!\n–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞...", 30, stop_event))
        await page.wait_for_load_state('networkidle')
        stop_event.set()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–∞–π–º–µ—Ä —Å—Ä–∞–∑—É, –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
        await timer_task

        # –≠—Ç–∞–ø 4: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
        search_input = await page.query_selector('#inheader-title-search-input')  # –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
        await search_input.fill(TARGET_ARTICLE)  # –í–≤–æ–¥–∏–º –∞—Ä—Ç–∏–∫—É–ª
        await page.wait_for_timeout(1000)  # –ü–æ–¥–æ–∂–¥–µ–º, –ø–æ–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –ø–æ–∏—Å–∫ (–∫—Ä—É—Ç—è—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä)

        # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
        await page.wait_for_selector('.kt-quick-search__item-wrapper', timeout=5000)  # –û–∂–∏–¥–∞–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ—è–≤—è—Ç—Å—è

        # –ò—â–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º 31509
        suggestions = await page.query_selector_all('.kt-quick-search__item-wrapper')  # –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–¥—Å–∫–∞–∑–∫–∏
        found = False
        
        for suggestion in suggestions:
            article_text = await suggestion.query_selector('.kt-quick-search__item-desc')
            if article_text:
                article_text_value = await article_text.inner_text()
                if TARGET_ARTICLE in article_text_value:  # –ï—Å–ª–∏ –∞—Ä—Ç–∏–∫—É–ª –Ω–∞–π–¥–µ–Ω –≤ –ø–æ–¥—Å–∫–∞–∑–∫–µ
                    link = await suggestion.query_selector('a')  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É
                    if link:
                        print(f"–ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º {TARGET_ARTICLE}. –ö–ª–∏–∫–∞–µ–º –Ω–∞ –Ω–µ–≥–æ...")
                        await link.click()  # –ö–ª–∏–∫–∞–µ–º –ø–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É
                        found = True
                        break

        if not found:
            print(f"–¢–æ–≤–∞—Ä —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º {TARGET_ARTICLE} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ–¥—Å–∫–∞–∑–∫–µ.")

        # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
        await page.wait_for_load_state('networkidle')  # –ñ–¥–µ–º, –ø–æ–∫–∞ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑—è—Ç—Å—è

        # –≠—Ç–∞–ø 5: –ü–∞—Ä—Å–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –∞—Ä—Ç–∏–∫—É–ª
        product_name_element = await page.query_selector('div.mb-2 span')  # –ü–µ—Ä–≤—ã–π span, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        article_element = await page.query_selector('div span:has-text("–ê—Ä—Ç:")')  # –í—Ç–æ—Ä–æ–π span, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç "–ê—Ä—Ç:"

        if product_name_element and article_element:
            product_name = await product_name_element.inner_text()  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
            article_text = await article_element.inner_text()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞
            article = article_text.replace('–ê—Ä—Ç:', '').strip()  # –ê—Ä—Ç–∏–∫—É–ª –±–µ–∑ "–ê—Ä—Ç:" –∏ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤

            print(f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {product_name}")
            print(f"–ê—Ä—Ç–∏–∫—É–ª: {article}")
        else:
            product_name, article = "–ù–µ —É–∫–∞–∑–∞–Ω–æ", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

        # –≠—Ç–∞–ø 6: –ü–∞—Ä—Å–∏–º —Ç–∞–±–ª–∏—Ü—É —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
        characteristics = {}
        rows = await page.query_selector_all('table tbody tr')
        for row in rows:
            cols = await row.query_selector_all('td')
            if len(cols) == 2:
                label = await cols[0].inner_text()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–∏
                value = await cols[1].inner_text()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –≤—Ç–æ—Ä–æ–π —è—á–µ–π–∫–∏
                characteristics[label.strip()] = value.strip()  # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä—É –≤ —Å–ª–æ–≤–∞—Ä—å

        # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–≤–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å—å—é
        ws.append(["", ""])  # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        ws.append(["", ""])  # –í—Å—Ç–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Excel
        ws.append(["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", product_name])
        ws.append(["–ê—Ä—Ç–∏–∫—É–ª", article])

        for label, value in characteristics.items():
            print(f"{label}: {value}")  # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
            ws.append([label, value])

        # –ò—â–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
        buttons = await page.query_selector_all('.product-images-thumbs button')

        image_urls = []
        if not buttons:
            print("–ù–µ –Ω–∞—à–ª–∏ –∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ üò¢")
        else:
            print(f"–ù–∞—à–ª–∏ {len(buttons)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–ø–∏—Å–æ–∫
            for button in buttons:
                style = await button.get_attribute('style')
                if style:
                    # –í—ã—Ç–∞—â–∏–º URL –∏–∑ —Å—Ç–∏–ª—è background-image
                    import re
                    match = re.search(r'url\(["\']?(.*?)["\']?\)', style)
                    if match:
                        relative_url = match.group(1)
                        full_url = 'https://opdev.ru' + relative_url
                        image_urls.append(full_url)

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Excel
        ws.append(["–°—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ", ", ".join(image_urls)])

        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ç–æ –≤ –∫–æ–Ω—Å–æ–ª—å
        print("\n–°—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ:")
        for url in image_urls:
            print(url)

        # –ó–∞–º–µ—Ä—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        total_time = time.time() - start_time
        print(f"\n–ó–∞—Ç—Ä–∞—á–µ–Ω–æ —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤: {total_time:.0f}  üôÇ")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º Excel —Ñ–∞–π–ª
        wb.save(os.path.join(os.path.dirname(__file__), "results.xlsx"))
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Excel —Ñ–∞–π–ª: results.xlsx")

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        await browser.close()

# –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
asyncio.run(run())
